---
layout:     post
title:      "MySQL事务、锁一些总结"
date:       2019-10-09 16:07:43
author:     "Jonliu"
header-img: "img/post-bg-2018.jpg"
tags:
    - 数据库
---

### 数据库引擎
- MyISAM适合于一些需要大量查询的应用.

- InnoDB支持“行锁”,适合并发写写操作。并且，他还支持更多的高级应用，比如：事务。

### 事务特性: ACID

原子性（Atomicity）：事务作为一个整体被执行，包含在其中的对数据库的操作要么全部被执行，要么都不执行。

一致性（Consistency）：事务应确保数据库的状态从一个一致状态转变为另一个一致状态。一致状态的含义是数据库中的数据应满足完整性约束。

隔离性（Isolation）：多个事务并发执行时，一个事务的执行不应影响其他事务的执行。

持久性（Durability）：一个事务一旦提交，他对数据库的修改应该永久保存在数据库中。

### 事务并发
- 脏读：脏读就是指当一个事务正在访问数据，并且对数据进行了修改，而这种修改还没有提交到数据库中，这时，另外一个事务也访问这个数据，然后使用了这个数据。
    >张三的工资为5000,事务A中把他的工资改为8000,但事务A尚未提交。
　　与此同时，
　　事务B正在读取张三的工资，读取到张三的工资为8000。
　　随后，
　　事务A发生异常，而回滚了事务。张三的工资又回滚为5000。
　　最后，
　　事务B读取到的张三工资为8000的数据即为脏数据，事务B做了一次脏读。
- 不可重复读：是指在一个事务内，多次读同一数据，导致问题。
    >在事务A中，读取到张三的工资为5000，操作没有完成，事务还没提交。
　　与此同时，
　　事务B把张三的工资改为8000，并提交了事务。
　　随后，
　　在事务A中，再次读取张三的工资，此时工资变为8000。在一个事务中前后两次读取的结果并不致，导致了不可重复读。

- 幻读：是指当事务不是独立执行时发生的一种现象，例如第一个事务对一个表中的数据进行了修改，这种修改涉及到表中的全部数据行。
    >目前工资为5000的员工有10人，事务A读取所有工资为5000的人数为10人。
　　此时，
　　事务B插入一条工资也为5000的记录。
　　这是，事务A再次读取工资为5000的员工，记录为11人。此时产生了幻读。

注意:
> 不可重复读的重点是修改，同样的条件，你读取过的数据，再次读取出来发现值不一样了.读的重点在于新增或者删除，同样的条件，第 1 次和第 2 次读出来的记录数不一样

`事务隔离级别`（解决事务并发）

（1）READ_UNCOMMITTED:读未提交
>这是事务最低的隔离级别，它充许另外一个事务可以看到这个事务未提交的数据。解决第一类丢失更新的问题，但是会出现脏读、不可重复读、第二类丢失更新的问题，幻读 。

（2）READ_COMMITTED:读提交
>保证一个事务修改的数据提交后才能被另外一个事务读取，即另外一个事务不能读取该事务未提交的数据。解决第一类丢失更新和脏读的问题，但会出现不可重复读、第二类丢失更新的问题，幻读问题

（3）REPEATABLE_READ:可重复读
> 保证一个事务相同条件下前后两次获取的数据是一致的解决第一类丢失更新，脏读、不可重复读、第二类丢失更新的问题，但会出幻读。

（4）SERIALIZABLE:串行化
>事务被处理为顺序执行,解决所有问题,性能差

MVCC（多版本并发控制）实现:
Innodb实现，通过添加额外字段，时间戳或者uuid来实现数据版本，事务并发的时候，解决不可重复读的问题。

### 乐观锁、悲观锁

乐观锁：通过再数据表中添加version字段解决并发问题，如果插入的版本大于表中记录则更新，否则人物已经过期。

悲观锁：通过设置autocommit=0实现，事务执行完需要手动提交
